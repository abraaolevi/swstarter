version: '3.8'

x-common-environment: &common-environment
  APP_ENV: production
  APP_KEY: base64:e3hoW4Il0VsEGoDQF7Hdfp3p72V8Dlny0fige0YGB2Q=
  DB_CONNECTION: pgsql
  DB_HOST: postgres
  DB_PORT: 5432
  DB_DATABASE: starwars_db
  DB_USERNAME: starwars_user
  DB_PASSWORD: starwars_password
  REDIS_HOST: redis
  REDIS_PORT: 6379
  CACHE_STORE: redis
  SESSION_DRIVER: redis
  QUEUE_CONNECTION: redis

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    environment:
      <<: *common-environment
    depends_on:
      - postgres
      - redis
      - migrate
    volumes:
      - ./backend:/var/www/html
    ports:
      - "8000:8000"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    environment:
      VITE_API_URL: http://localhost:8000/api
    ports:
      - "80:80"
    depends_on:
      - backend

  scheduler:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    environment:
      <<: *common-environment
    depends_on:
      - backend
    command: ["php", "artisan", "schedule:work"]

  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    environment:
      <<: *common-environment
    depends_on:
      - backend
    command: ["php", "artisan", "queue:work", "--tries=3"]

  migrate:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    environment:
      <<: *common-environment
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    command: ["php", "artisan", "migrate", "--force"]

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: starwars_user
      POSTGRES_PASSWORD: starwars_password
      POSTGRES_DB: starwars_db
    tmpfs:
      - /var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "starwars_user"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
