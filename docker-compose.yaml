name: "star-wars-app"

services:
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://localhost:8000/api
    depends_on:
      - backend
    develop:
      watch:
        - action: sync
          path: ./frontend/src
          target: /app/src
        - action: rebuild
          path: ./frontend/package.json

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - APP_ENV=local
      - APP_KEY=base64:e3hoW4Il0VsEGoDQF7Hdfp3p72V8Dlny0fige0YGB2Q=
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=starwars_db
      - DB_USERNAME=starwars_user
      - DB_PASSWORD=starwars_password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - SWAPI_BASE_URL=https://swapi.dev/api
      - FRONTEND_URL=http://localhost:5173
      - CACHE_STORE=redis
      - SESSION_DRIVER=redis
      - QUEUE_CONNECTION=redis
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    develop:
      watch:
        - action: sync
          path: ./backend/app
          target: /var/www/html/app
        - action: sync
          path: ./backend/routes
          target: /var/www/html/routes
        - action: rebuild
          path: ./backend/composer.json

  postgres:
    image: postgres:17.6-alpine
    environment:
      - POSTGRES_DB=starwars_db
      - POSTGRES_USER=starwars_user
      - POSTGRES_PASSWORD=starwars_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U starwars_user -d starwars_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.2-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

volumes:
  postgres_data:
  redis_data:
